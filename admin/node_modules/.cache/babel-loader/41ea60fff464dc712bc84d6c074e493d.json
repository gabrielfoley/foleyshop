{"ast":null,"code":"var _jsxFileName = \"/Users/ccr2k/Desktop/foleyshop/admin/src/pages/productList/ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./productList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts, deleteProducts } from \"../../redux/apiCalls\";\nimport { getProductFailure, getProductStart, getProductSuccess } from \"../../redux/productRedux\";\nimport { publicRequest } from '../../requestMethods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n\n  const dispatch = useDispatch(); //const products = useSelector((state)=>state.product.products);\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      dispatch(getProductStart());\n\n      try {\n        const res = await publicRequest.get(\"/products\");\n        dispatch(getProductSuccess(res.data));\n        setProducts(res.data);\n      } catch (e) {\n        dispatch(getProductFailure());\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const handleDelete = id => {\n    dispatch(deleteProducts(id));\n  };\n\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    width: 220\n  }, {\n    field: \"product\",\n    headerName: \"Product\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productListImg\",\n          src: params.row.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), params.row.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"inStock\",\n    headerName: \"Stock\",\n    width: 200\n  }, {\n    field: \"price\",\n    headerName: \"Price\",\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/product/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: products,\n      disableSelectionOnClick: true,\n      columns: columns,\n      getRowId: row => row._id,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"uu08KMweiZgfU+EG65eIv4JYs0o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/ccr2k/Desktop/foleyshop/admin/src/pages/productList/ProductList.jsx"],"names":["DataGrid","DeleteOutline","Link","useEffect","useState","useDispatch","useSelector","getProducts","deleteProducts","getProductFailure","getProductStart","getProductSuccess","publicRequest","ProductList","dispatch","products","setProducts","res","get","data","e","handleDelete","id","columns","field","headerName","width","renderCell","params","row","img","title","_id"],"mappings":"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","sourcesContent":["import \"./productList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts, deleteProducts } from \"../../redux/apiCalls\";\nimport { getProductFailure, getProductStart, getProductSuccess } from \"../../redux/productRedux\";\nimport { publicRequest } from '../../requestMethods';\n\nexport default function ProductList() {\n  const dispatch = useDispatch();\n  //const products = useSelector((state)=>state.product.products);\n  const [products, setProducts] = useState([])\n\n  useEffect(()=>{\n    const getProducts = async()=> {\n      dispatch(getProductStart())\n      try{\n         const res = await publicRequest.get(\"/products\");\n         dispatch(getProductSuccess(res.data))         \n         setProducts(res.data)\n      } catch(e){\n        dispatch(getProductFailure())\n      }\n    }\n    getProducts()\n  },[])\n\n  const handleDelete = (id) => {\n    dispatch(deleteProducts(id))\n  \n  };\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 220 },\n    {\n      field: \"product\",\n      headerName: \"Product\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"productListItem\">\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\n            {params.row.title}\n          </div>\n        );\n      },\n    },\n    { field: \"inStock\", headerName: \"Stock\", width: 200 },\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={\"/product/\" + params.row.id}>\n              <button className=\"productListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n        rows={products}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId={(row)=> row._id}\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}