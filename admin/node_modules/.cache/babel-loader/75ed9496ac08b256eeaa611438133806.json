{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from '../requestMethods';\nimport { getProductStart, getProductSuccess, getProductFailure, deleteProductStart, deleteProductSuccess, deleteProductFailure } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n\n    if (res.data) {\n      dispatch(deleteProductSuccess(id));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, user, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n\n    if (res.data) {\n      dispatch(updateProductSuccess({\n        id: user\n      }));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n\n    if (res.data) {\n      dispatch(deleteProductSuccess(id));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(deleteProductFailure());\n  }\n};","map":{"version":3,"sources":["/Users/ccr2k/Desktop/foleyshop/admin/src/redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSuccess","publicRequest","userRequest","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","deleteProductFailure","login","dispatch","user","res","post","data","err","getProducts","get","deleteProduct","id","delete","console","log","updateProduct","updateProductStart","updateProductSuccess","updateProductFailure","addProduct"],"mappings":"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","sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from '../requestMethods';\nimport { \n  getProductStart, \n  getProductSuccess, \n  getProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure,\n } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try{\n    const res = await publicRequest.post(\"/auth/login\",user);\n    dispatch(loginSuccess(res.data));\n  }catch(err){\n    dispatch(loginFailure())\n  }\n};\nexport const getProducts = async (dispatch) => {\n  dispatch(getProductStart());\n  try{\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  }catch(err){\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async ( id, dispatch ) => {\n  dispatch(deleteProductStart());\n  try{\n    const res = await userRequest.delete(`/products/${id}`);\n    if (res.data) { dispatch(deleteProductSuccess(id)) }\n  }catch(err){\n    console.log(err);\n    dispatch(deleteProductFailure());\n  }\n};\n\n\n\nexport const updateProduct = async ( id, user, dispatch ) => { \n  dispatch(updateProductStart());\n  try{\n    const res = await userRequest.delete(`/products/${id}`);\n    if (res.data) {\n      dispatch(updateProductSuccess({id: user}));\n    }\n  }catch(err){\n    console.log(err);\n    dispatch(updateProductFailure());\n  }\n};\n\nexport const addProduct = async ( id, dispatch ) => \n{ dispatch(deleteProductStart());\n  try{\n    const res = await userRequest.delete(`/products/${id}`);\n    if (res.data) {\n      dispatch(deleteProductSuccess(id))\n    }\n  }catch(err){\n    console.log(err);\n    dispatch(deleteProductFailure());\n\n  }\n};"]},"metadata":{},"sourceType":"module"}