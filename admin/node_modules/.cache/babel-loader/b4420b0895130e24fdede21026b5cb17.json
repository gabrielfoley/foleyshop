{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; //import cartRedux from \"./cartRedux\";\n//const userRedux = createSlice({\n\nconst userRedux = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    //should this be \"[]\"? was \"null\"\n    isFetching: {},\n    //should this be \"false\"? was \"{}\"\n    error: {} //should this be \"false\"? was \"{}\"\n\n  },\n  reducers: {\n    //LOGIN \n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true; //LOGOUT\n    },\n    logoutStart: state => {\n      state.isFetching = true;\n    },\n    logoutSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    logoutFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //DELETE USER\n    deleteUserStart: state => {\n      state.isFetching = true;\n    },\n    deleteUserSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    deleteUserFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //ADD USER\n    addUserStart: state => {\n      state.isFetching = true;\n    },\n    addUserSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    addUserFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logoutStart,\n  logoutSuccess,\n  logoutFailure,\n  deleteUserStart,\n  deleteUserSuccess,\n  deleteUserFailure,\n  addUserStart,\n  addUserSuccess,\n  addUserFailure\n} = userRedux.actions;\nexport default userRedux.reducer;","map":{"version":3,"sources":["/Users/ccr2k/Desktop/foleyshop/admin/src/redux/userRedux.js"],"names":["createSlice","userRedux","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logoutStart","logoutSuccess","logoutFailure","deleteUserStart","deleteUserSuccess","deleteUserFailure","addUserStart","addUserSuccess","addUserFailure","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n//import cartRedux from \"./cartRedux\";\n\n//const userRedux = createSlice({\n const userRedux = createSlice({\n  name: \"user\",\n  initialState:{\n    currentUser : null, //should this be \"[]\"? was \"null\"\n    isFetching: {}, //should this be \"false\"? was \"{}\"\n    error: {} //should this be \"false\"? was \"{}\"\n  },\n  reducers: {\n    //LOGIN \n    loginStart:(state)=>{\n      state.isFetching=true\n    },\n    loginSuccess:(state,action)=>{\n      state.isFetching=false;\n      state.currentUser=action.payload\n    },\n    loginFailure:(state)=>{\n      state.isFetching=false;\n      state.error=true;\n//LOGOUT\n    },\n    logoutStart:(state)=>{\n      state.isFetching=true\n    },\n    logoutSuccess:(state,action)=>{\n      state.isFetching=false;\n      state.currentUser=action.payload\n    },\n    logoutFailure:(state)=>{\n      state.isFetching=false;\n      state.error=true;\n    },\n  //DELETE USER\ndeleteUserStart:(state)=>{\n  state.isFetching=true\n},\ndeleteUserSuccess:(state,action)=>{\n  state.isFetching=false;\n  state.currentUser=action.payload\n},\ndeleteUserFailure:(state)=>{\n  state.isFetching=false;\n  state.error=true;\n},\n//ADD USER\naddUserStart:(state)=>{\n  state.isFetching=true\n},\naddUserSuccess:(state,action)=>{\n  state.isFetching=false;\n  state.currentUser=action.payload\n},\naddUserFailure:(state)=>{\n  state.isFetching=false;\n  state.error=true;\n},\n  },\n});\n\nexport const { \n  loginStart, \n  loginSuccess, \n  loginFailure,\n  logoutStart,\n  logoutSuccess,\n  logoutFailure,\n  deleteUserStart,\n  deleteUserSuccess,\n  deleteUserFailure,\n  addUserStart,\n  addUserSuccess,\n  addUserFailure,\n } = userRedux.actions\n\nexport default userRedux.reducer;"]},"metadata":{},"sourceType":"module"}