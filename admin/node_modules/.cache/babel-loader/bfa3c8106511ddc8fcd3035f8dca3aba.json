{"ast":null,"code":"import { addUserStart, addUserSuccess, deleteUserStart, loginFailure, loginStart, loginSuccess, updateUserSuccess, updateUserFailure, addUserFailure } from \"./userRedux\";\nimport { publicRequest, userRequest } from '../requestMethods';\nimport { getProductStart, getProductSuccess, getProductFailure, deleteProductStart, deleteProductSuccess, deleteProductFailure, updateProductStart, updateProductSuccess, updateProductFailure, addProductStart, addProductSuccess, addProductFailure } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n\n    if (res.data) {\n      dispatch(deleteProductSuccess(id));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    //UPDATE\n    const res = await userRequest.put(`/products/${id}`, product);\n\n    if (res.data) {\n      dispatch(updateProductSuccess({\n        id,\n        product\n      }));\n      window.location.pathname = '/product';\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products/`, product);\n\n    if (res.data) {\n      dispatch(addProductSuccess(res.data));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(addProductFailure());\n  }\n}; //user\n\nexport const addUsers = async dispatch => {\n  dispatch(addUserStart());\n\n  try {\n    const res = await publicRequest.get(\"/users\");\n    dispatch(addUserSuccess(res.data));\n  } catch (err) {\n    dispatch(addUserFailure());\n  }\n};\nexport const deleteUser = async (id, dispatch) => {\n  dispatch(deleteUserStart());\n\n  try {\n    const res = await userRequest.delete(`/users/${id}`);\n\n    if (res.data) {\n      dispatch(deleteUserSuccess(id));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(deleteUserFailure());\n  }\n};\nexport const updateUser = async (id, user, dispatch) => {\n  dispatch(updateUserStart());\n\n  try {\n    //UPDATE\n    const res = await userRequest.put(`/users/${id}`, user);\n\n    if (res.data) {\n      dispatch(updateUserSuccess({\n        id,\n        user\n      }));\n      window.location.pathname = '/user';\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(updateUserFailure());\n  }\n};\nexport const addUser = async (user, dispatch) => {\n  dispatch(addUserStart());\n\n  try {\n    const res = await userRequest.post(`/users/`, user);\n\n    if (res.data) {\n      dispatch(addUserSuccess(res.data));\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(addUserFailure());\n  }\n};","map":{"version":3,"sources":["/Users/ccr2k/Desktop/foleyshop/admin/src/redux/apiCalls.js"],"names":["addUserStart","addUserSuccess","deleteUserStart","loginFailure","loginStart","loginSuccess","updateUserSuccess","updateUserFailure","addUserFailure","publicRequest","userRequest","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","deleteProductFailure","updateProductStart","updateProductSuccess","updateProductFailure","addProductStart","addProductSuccess","addProductFailure","login","dispatch","user","res","post","data","err","getProducts","get","deleteProduct","id","delete","console","log","updateProduct","product","put","window","location","pathname","addProduct","addUsers","deleteUser","deleteUserSuccess","deleteUserFailure","updateUser","updateUserStart","addUser"],"mappings":"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","sourcesContent":["import { addUserStart, addUserSuccess, deleteUserStart, loginFailure, loginStart, loginSuccess,updateUserSuccess,updateUserFailure,addUserFailure } from \"./userRedux\";\nimport { publicRequest, userRequest } from '../requestMethods';\nimport { \n  getProductStart, \n  getProductSuccess, \n  getProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  updateProductFailure,\n  addProductStart,\n  addProductSuccess,\n  addProductFailure,\n } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try{\n    const res = await publicRequest.post(\"/auth/login\",user);\n    dispatch(loginSuccess(res.data));\n  }catch(err){\n    dispatch(loginFailure())\n  }\n};\nexport const getProducts = async (dispatch) => {\n  dispatch(getProductStart());\n  try{\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  }catch(err){\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async ( id, dispatch ) => {\n  dispatch(deleteProductStart());\n  try{\n    const res = await userRequest.delete(`/products/${id}`);\n    if (res.data) { dispatch(deleteProductSuccess(id)) }\n  }catch(err){\n    console.log(err);\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async ( id, product, dispatch ) => { \n  dispatch(updateProductStart());\n  try{\n    //UPDATE\n    const res = await userRequest.put(`/products/${id}`, product);\n    if (res.data) {\n      dispatch(updateProductSuccess({ id, product }));\n      window.location.pathname = '/product'\n    }\n  }catch (err) {\n    console.log(err);\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async ( product, dispatch ) => \n{ dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products/`, product);\n    if (res.data) {\n      dispatch(addProductSuccess(res.data));\n    }\n  }catch(err){\n    console.log(err);\n    dispatch(addProductFailure());\n\n  }\n};\n\n\n\n//user\n\nexport const addUsers = async (dispatch) => {\n  dispatch(addUserStart());\n  try{\n    const res = await publicRequest.get(\"/users\");\n    dispatch(addUserSuccess(res.data));\n  }catch(err){\n    dispatch(addUserFailure());\n  }\n};\nexport const deleteUser = async ( id, dispatch ) => {\n  dispatch(deleteUserStart());\n  try{\n    const res = await userRequest.delete(`/users/${id}`);\n    if (res.data) { dispatch(deleteUserSuccess(id)) }\n  }catch(err){\n    console.log(err);\n    dispatch(deleteUserFailure());\n  }\n};\nexport const updateUser = async ( id, user, dispatch ) => { \n  dispatch(updateUserStart());\n  try{\n    //UPDATE\n    const res = await userRequest.put(`/users/${id}`, user);\n    if (res.data) {\n      dispatch(updateUserSuccess({ id, user }));\n      window.location.pathname = '/user'\n    }\n  }catch (err) {\n    console.log(err);\n    dispatch(updateUserFailure());\n  }\n};\nexport const addUser = async ( user, dispatch ) => \n{ dispatch(addUserStart());\n  try {\n    const res = await userRequest.post(`/users/`, user);\n    if (res.data) {\n      dispatch(addUserSuccess(res.data));\n    }\n  }catch(err){\n    console.log(err);\n    dispatch(addUserFailure());\n\n  }\n};"]},"metadata":{},"sourceType":"module"}