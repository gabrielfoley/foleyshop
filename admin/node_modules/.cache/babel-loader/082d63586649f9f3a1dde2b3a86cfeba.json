{"ast":null,"code":"var _jsxFileName = \"/Users/ccr2k/Desktop/foleyshop/admin/src/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { publicRequest, userRequest } from '../../requestMethods';\nimport { addUserStart, addUserSuccess, addUserFailure } from \"../../redux/userListRedux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const addUsers = async () => {\n      dispatch(addUserStart());\n\n      try {\n        const res = await userRequest.get(\"/users\");\n        dispatch(addUserSuccess(res.data));\n        setData(res.data);\n      } catch (e) {\n        dispatch(addUserFailure());\n      }\n    };\n\n    addUsers();\n  }, []);\n\n  const handleDelete = id => {\n    setData(data.filter(item => item.id !== id));\n  };\n\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"user\",\n    headerName: \"User\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.avatar || 'https://media.istockphoto.com/id/1131164548/vector/avatar-5.jpg?s=612x612&w=0&k=20&c=CK49ShLJwDxE4kiroCR42kimTuuhvuo2FH5y_6aSgEo=',\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), params.row.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 120\n  }, {\n    field: \"transaction\",\n    headerName: \"Transaction Volume\",\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(params.row.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      getRowId: row => row._id,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"Dmmh6Y0eVwzLRuG+FuDcVKz/vS8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/ccr2k/Desktop/foleyshop/admin/src/pages/userList/UserList.jsx"],"names":["DataGrid","DeleteOutline","userRows","Link","useEffect","useState","useDispatch","publicRequest","userRequest","addUserStart","addUserSuccess","addUserFailure","UserList","dispatch","data","setData","addUsers","res","get","e","handleDelete","id","filter","item","columns","field","headerName","width","renderCell","params","row","avatar","username","_id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AAGA,SACEC,YADF,EAEEC,cAFF,EAGEC,cAHF,QAIQ,2BAJR;;;AAOA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMY,QAAQ,GAAG,YAAU;AACzBH,MAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;;AACA,UAAG;AACA,cAAMQ,GAAG,GAAG,MAAMT,WAAW,CAACU,GAAZ,CAAgB,QAAhB,CAAlB;AACAL,QAAAA,QAAQ,CAACH,cAAc,CAACO,GAAG,CAACH,IAAL,CAAf,CAAR;AACAC,QAAAA,OAAO,CAACE,GAAG,CAACH,IAAL,CAAP;AACF,OAJD,CAIE,OAAMK,CAAN,EAAQ;AACRN,QAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACD;AACF,KATD;;AAUAK,IAAAA,QAAQ;AACT,GAZQ,EAYP,EAZO,CAAT;;AAcA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3BN,IAAAA,OAAO,CAACD,IAAI,CAACQ,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADc,EAEd;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,UAAU,EAAE,MAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,UAAU,EAAGC,MAAD,IAAY;AACtB,0BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEA,MAAM,CAACC,GAAP,CAAWC,MAAX,IAAqB,mIAAvD;AAA4L,UAAA,GAAG,EAAC;AAAhM;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,MAAM,CAACC,GAAP,CAAWE,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AAXH,GAFc,EAed;AAAEP,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,UAAU,EAAE,OAA9B;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAfc,EAgBd;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,UAAU,EAAE,QAFd;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAhBc,EAqBd;AACEF,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,UAAU,EAAE,oBAFd;AAGEC,IAAAA,KAAK,EAAE;AAHT,GArBc,EA0Bd;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,UAAU,EAAE,QAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,UAAU,EAAGC,MAAD,IAAY;AACtB,0BACE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,WAAWA,MAAM,CAACC,GAAP,CAAWT,EAAhC;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MAAMD,YAAY,CAACS,MAAM,CAACC,GAAP,CAAWT,EAAZ;AAF7B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBADF;AAWD;AAhBH,GA1Bc,CAAhB;AA8CA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,QAAQ,EAAGgB,GAAD,IAASA,GAAG,CAACG,GAFzB;AAGE,MAAA,uBAAuB,MAHzB;AAIE,MAAA,OAAO,EAAET,OAJX;AAKE,MAAA,QAAQ,EAAE,CALZ;AAME,MAAA,iBAAiB;AANnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjFuBZ,Q;UACLN,W;;;KADKM,Q","sourcesContent":["import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { publicRequest, userRequest } from '../../requestMethods';\n\n\nimport { \n  addUserStart, \n  addUserSuccess, \n  addUserFailure  \n } from \"../../redux/userListRedux\";\n\n\nexport default function UserList() {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n\n\n  useEffect(()=>{\n    const addUsers = async()=> {\n      dispatch(addUserStart())\n      try{\n         const res = await userRequest.get(\"/users\");\n         dispatch(addUserSuccess(res.data))         \n         setData(res.data)\n      } catch(e){\n        dispatch(addUserFailure())\n      }\n    }\n    addUsers()\n  },[])\n\n  const handleDelete = (id) => {\n    setData(data.filter((item) => item.id !== id));\n  };\n  \n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"user\",\n      headerName: \"User\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"userListUser\">\n            <img className=\"userListImg\" src={params.row.avatar || 'https://media.istockphoto.com/id/1131164548/vector/avatar-5.jpg?s=612x612&w=0&k=20&c=CK49ShLJwDxE4kiroCR42kimTuuhvuo2FH5y_6aSgEo='} alt=\"\" />\n            {params.row.username}\n          </div>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 120,\n    },\n    {\n      field: \"transaction\",\n      headerName: \"Transaction Volume\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={\"/user/\" + params.row.id}>\n              <button className=\"userListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"userListDelete\"\n              onClick={() => handleDelete(params.row.id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"userList\">\n      <DataGrid\n        rows={data}\n        getRowId={(row) => row._id}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}